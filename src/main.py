import os
import logging
import asyncio
from fastapi import FastAPI
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from src.handlers import start, profile
from src.db import db

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ï
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# FastAPI app
app = FastAPI()

@app.get("/")
def health_check():
    return {"status": "active", "bot": "Edu Assam Bot"}

# Bot ‡¶ö‡¶≤‡ßã‡ß±‡¶æ‡ß∞ function
async def run_bot():
    from aiogram.client.default import DefaultBotProperties

bot = Bot(
    token=os.getenv("BOT_TOKEN"),
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
    dp = Dispatcher()

    # ‡¶π‡ßá‡¶£‡ßç‡¶°‡¶≤‡¶æ‡ß∞ ‡ß∞‡ßá‡¶ú‡¶ø‡¶∑‡ßç‡¶ü‡¶æ‡ß∞ ‡¶ï‡ß∞‡¶ï
    dp.include_router(start.router)
    dp.include_router(profile.router)

    logger.info("ü§ñ Bot polling started...")
    await dp.start_polling(bot)

# Startup event ‚Üí FastAPI server ‡¶â‡¶†‡¶ø‡¶≤‡ßá‡¶á bot ‡¶ñ‡¶®‡ßã ‡¶ö‡¶≤‡¶ø‡¶¨
@app.on_event("startup")
async def startup_event():
    asyncio.create_task(run_bot())   # background‡¶§ bot ‡¶ö‡¶≤‡¶ø‡¶¨

if __name__ == "__main__":
    import uvicorn
    # ‡¶è‡¶ï‡ßá‡¶á container ‡¶§ FastAPI server ‡¶ö‡¶≤‡¶ø‡¶¨
    uvicorn.run(app, host="0.0.0.0", port=int(os.getenv("PORT", 8000)))
